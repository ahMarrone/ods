{% extends 'base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('leaflet/leaflet.js') }}"></script>
    <script src="{{ asset('bootstrap-select/dist/js/bootstrap-select.js') }}"></script>
<!--     <script src="http://maps.google.com/maps/api/js?v=3.2&sensor=false"></script>
    <script src="http://matchingnotes.com/javascripts/leaflet-google.js"></script> -->
{% endblock %}    

{% block stylesheets %}
    {{ parent() }}
    <style type="text/css">
    body {
        padding-top: 150px;
    }

    #map_canvas {
      height: 100%;
      overflow: hidden;
      width: 100%;
    }

    .info {
        padding: 6px 8px;
        font: 14px/16px Arial, Helvetica, sans-serif;
        background: white;
        background: rgba(255,255,255,0.8);
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
        border-radius: 5px;
    }
    .info h4 {
        margin: 0 0 5px;
        color: #777;
    }
    .legend {
        line-height: 18px;
        color: #555;
    }
    .legend i {
        width: 18px;
        height: 18px;
        float: left;
        margin-right: 8px;
        opacity: 0.7;
    }
    .myClass {
        padding-top: 5%;
        padding-left: 5%;
        opacity: 0.7;
    }


    </style>
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="{{ asset('leaflet/leaflet.css') }}" />
    <link rel="stylesheet" href="{{ asset('bootstrap-select/dist/css/bootstrap-select.css') }}" />
    <!-- Custom styles for this template -->
    <link href="http://www.politicassociales.gob.ar/public/css/estilo_cncps.css" rel="stylesheet">
    <link href="http://www.politicassociales.gob.ar/public/css/font-awesome.min.css" rel="stylesheet" >
    <!-- Estilo del Slider -->
    <link rel="stylesheet" type="text/css" href="http://www.politicassociales.gob.ar/public/css/styles.css" media="all"/>
    
{% endblock %}

{% block body %}

<header>
   <div class="container">
      <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-6">
          <div class="logoConsejo pull-left"><a href="http://www.politicassociales.gob.ar/Index"><img class="center-block" alt="Logo Consejo Nacional de Coordinaci&oacute;n de Pol&iacute;ticas Sociales" src="http://www.politicassociales.gob.ar/public/images/LogoConsejo.png"></a></div>
          <div class="logoPresidencia"><img alt="Logo Presidencia de la Nación" src="http://www.politicassociales.gob.ar/public/images/LogoPresidenciaWhite.png"></div>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-6">         
          <p class="mensajeAnoyFecha">            
              <strong>
              2016 - Año del Bicentenario de la Declaración de la Independencia Nacional</strong><br>
          </p>
        </div>  
      </div>
    </div>  
</header> 

<nav class="navbar navbar-default navbar-fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="#">
        <img alt="" src="...">
      </a>
    </div>
  </div>
</nav>


<div class="container">
    <div class="row">
      <label class="col-md-1" for="selectorIndicador">Objetivo</label>
      <div class="col-md-5">
        <select id="selectorIndicador" class="selectpicker">
            <option>Nivel de desempleo (porcentual)</option>
        </select>
      </div>
      <label class="col-md-1" for="selectorDesgloce">Desgloce</label>
      <div class="col-md-5">
      <select id="selectorDesgloce" class="selectpicker">
        <option id='pobreza_h'>Masculino</option>
        <option id='pobreza_m'>Femenino</option>
      </select>
        <!-- <div class="dropdown" id="indicadores">
          <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            Indicadores Disponibles
            <span class="caret"></span>
          </button>
          <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
            <li id='pobreza_h'><a href="#">Porcentaje de hombres desempleados</a></li>
            <li id='pobreza_m'><a href="#" >Porcentaje de mujeres desempleadas</a></li>
          </ul>
        </div>-->
      </div> 
    </div>
    <br>
    <div class="row">
     <div class="col-md-1">
        <div id="map_canvas" style="width: 1000px; height: 500px"></div>
        </div>
    </div>
</div>
<!-- <div id="map_canvas" class="leaflet-container leaflet-fade-anim"></div> -->


<script type="text/javascript">
$(document).ready(function() {
    // $('#sel').val('Relish');
    // $('#sel').selectpicker('render');
    // $('#sel').selectpicker('val', 'Ketchup');

  inicializarMapa($('#selectorDesgloce').children(":selected").attr("id"), $('#selectorDesgloce').val());
});

// $('#indicadores li').on('click', function() {
//   actualizarCapa($(this).attr('id'), $(this).text());
// });
$('#selectorDesgloce').on('change', function() {
  actualizarCapa($(this).children(":selected").attr("id"), $(this).val());
});
</script>

<script>
  var map;
  var capaActiva;
  var baseTile = L.tileLayer('http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png' , { attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>' });
  var info;
  var legend;

  var selected = '';
  var text = '';

function inicializarMapa(s, t) {
    selected = s;
    text = t;
    $.getJSON("geoData.js", crearCapa);
}

function style(feature) {
    return {
        fillColor: getColor(feature.properties[selected]),
        weight: 2,
        opacity: 1,
        color: 'white',
        dashArray: '3',
        fillOpacity: 0.7
        };
}

function getColor(d) {
    return d > 80 ? '#045a8d' :
           d > 60 ? '#2b8cbe' :
           d > 40 ? '#74a9cf' :
           d > 20 ? '#bdc9e1' :
                    '#f1eef6' ;
}

function addDivLegend (map) {
    var div = L.DomUtil.create('div', 'info legend'),
        grades = [0, 20, 40, 60, 80, 100],
        labels = [];
        div.innerHTML = '<b>' + text + ' </b><hr>'

    // loop through our density intervals and generate a label with a colored square for each interval
    for (var i = 0; i < grades.length; i++) {
        div.innerHTML +=
            '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
            grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
    }

    return div;
}

function addDivInfo (map) {
        this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
        this.update();
        return this._div;
    }

// method that we will use to update the control based on feature properties passed
function updateDivInfo (props) {
    textoIndicador = $('#selectorIndicador').children(":selected").val();
    this._div.innerHTML = '<h4>' + textoIndicador +'<hr>pobreza</h4>' +  (props ?
    'Provincia: <b>' + props.nombre + '</b><br />pobreza: ' + props[selected]
    : 'Desplazarse sobre una provincia');
}

function actualizarCapa(s, t) {
    map.removeControl(legend);
    map.removeControl(info);
    selected = s;
    text = t;

    info.onAdd = addDivInfo;
    info.update = updateDivInfo;
    legend.onAdd = addDivLegend;
    info.addTo(map);  
    legend.addTo(map);

    capaActiva.eachLayer(function (layer) {
        layer.setStyle(style(layer.feature))
    });
}

function onOverlayAdd(e){
  capaActiva = e.layer;
  capaActiva.eachLayer(function (layer) {
      layer.setStyle(style(layer.feature))
    });
}

function crearCapa(geoJsonData) {

    /* Crear Capas 
    */
    
    var baseMaps = {};
    var capas = [];

    if (geoJsonData['provincia']) {
      baseMaps["Provincia"] = L.geoJson(geoJsonData['provincia'], {onEachFeature: onEachFeature, style: style});  
    }

    if (geoJsonData['nacion']) {
      baseMaps["Nación"] = L.geoJson(geoJsonData['nacion'], {onEachFeature: onEachFeature, style: style});  
    }

    $.each(baseMaps, function(key, value) {
      capas.push(value);
    });

    capaActiva = capas[0];
    
    /* Crear 'Objeto Mapa', asignar a Div y definir capa base */
    map = L.map(document.getElementById('map_canvas'), {
      layers: [capaActiva],
      doubleClickZoom: false});
    /* Agregar Mapa de Base */
    baseTile.addTo(map);
    /* Controles sobre el Mapa */
    info = L.control({position: 'topright'});
    legend = L.control({position: 'bottomright'});
    L.control.layers(baseMaps, null, {position: 'topleft', collapsed: true}).addTo(map);
    // L.control.scale().addTo(map);

    /* Definir métodos de Creación y Actualización */
    info.onAdd = addDivInfo;
    info.update = updateDivInfo;
    legend.onAdd = addDivLegend;

    /*Definiciones sobre 'map.on' */
    map.on('baselayerchange', onOverlayAdd);

    // Definir centro de mapa a partir de capa por defecto
    map.fitBounds(capas[0].getBounds());
    /* Agregar capas y otros */
    info.addTo(map);
    legend.addTo(map);

    function highlightFeature(e) {
        var layer = e.target;
        layer.setStyle({
            weight: 1,
            color: '#646',
            dashArray: '',
            fillOpacity: 0.3
        });
      
        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }
        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        capaActiva.resetStyle(e.target);
        info.update();
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    }

    function zoomOut(e) {
      map.fitBounds(capaActiva.getBounds());
    }

    function onEachFeature(feature, layer) {
        // layer.bindPopup(feature.properties.nombre + " " + feature.properties[selected]);
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature,
            dblclick: zoomOut
        });
    }
}


</script>

<!-- http://gis.stackexchange.com/questions/41928/adding-removing-leaflet-geojson-layers -->
<!-- http://gis.stackexchange.com/questions/68941/how-to-add-remove-legend-with-leaflet-layers-control -->
{% endblock %}