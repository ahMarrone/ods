{% extends 'base_panel_users.html.twig' %}

{% block stylesheets %}
    {{ parent() }}

    <link href="{{ asset('css/bootstrap-datepicker3.min.css') }}" rel="stylesheet" />
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/underscore-min.js') }}"></script>
    <script src="{{ asset('js/backbone-min.js') }}"></script>
    <script src="{{ asset('js/ThreeSelect.js') }}"></script>
    <script src="{{ asset('js/bootstrap-datepicker.min.js') }}"></script>
{% endblock %}

{% block panel_body %}
	 {% if  show_breadcrumbs is defined and show_breadcrumbs == true %} 
	<ol class="breadcrumb">
        <li><a href="{{ path('paneluser_index') }}">Panel de usuario</a></li>
        <li class="active">Visualizar valores indicadores</a></li>
    </ol>
    {% endif %}
    <div class="page-header">
          <h2>Visualizar valores de indicadores</h2>
    </div>


	<h3>Selección de parámetros</h3>
	<form id="preloaddataForm" action="{{ path('admin_crud_valoresindicadores_new') }}" method="post" class="form-horizontal" > 
		<div id="selects"></div>
		<div id="alertsDates" class="alert alert-info col-md-offset-2" role="alert"><b>Este indicador tiene datos cargados en los períodos:</b>  <span id="indicadorDatesWithData"></span></div>
		<div class="form-group">
			<label class="col-sm-2  control-label" for="dateValuePicker">Período</label>
			<div class="col-sm-2">
				<input type="text" id="dateValuePicker" name="periodData" class="col-sm-2 expected-value-datepicker form-control" value="">
			</div>
		</div> 
	</form>




	<button id="requestVisualizeData" type="button" data-loading-text="Actualizando..." class="btn btn-success col-md-offset-2">Ver datos</button>


	<h3>Tabla de datos</h3>
	<table id="valoresindicadoresTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
	<thead>
	<tr>
		<th>Ref. geográfica</th>
		<th>Ref. geográfica superior</th>
		<th>Etiqueta</th>
		<th>Valor</th>
		<th>Aprobado</th>
	</tr>
	</thead>
	<tfoot>
		<tr>
			<th>Ref. geográfica</th>
			<th>Ref. geográfica  superior</th>
			<th>Etiqueta</th>
			<th>Valor</th>
			<th>Aprobado</th>
		</tr>
	</tfoot>
	</table>


<script type="text/javascript">
	$(document).ready(function() {

		var api_urls = {{ api_urls|json_encode|raw}};

        var objetivos = {{ objetivos|json_encode|raw}};
        var metas = {{ metas|json_encode|raw}};
        var indicadores = {{ indicadores|json_encode|raw}};
        var objetivo_selected = {{id_objetivo_selected}};
        var meta_selected = {{id_meta_selected}};
        var indicador_selected = {{id_indicador_selected}};
        var preselected_date = {{preselected_date}};

        var view;
        var model;
        var table = null;
        var showNoValues = true;


		var $btn;

    	function serializeFormData(){
    		var string = "";
    		string += "id_indicador="+$('#three_select_indicador').val()+"&"+
    				  "fecha="+$('#dateValuePicker').val();
    		return string;
    	}



		
    	$.fn.dataTable.ext.buttons.hideNoValue = {
		    text: 'Ocultar/Mostrar registros sin valor',
		    action: function ( e, dt, node, config ) {
		    	showNoValues = !showNoValues;
		    	if (showNoValues){
		    		table.columns(4).search("").draw();
		    	} else {
		    		table.columns(4).search("[No|Si]", true).draw();
		    	}
		    }
		};

    	function initTable(){
		  	$('#valoresindicadoresTable tfoot th').each( function () {
	        	var title = $(this).text();
	        	$(this).html( '<input type="text" placeholder="Buscar '+title+'" />' );
	    	});
    		table = $('#valoresindicadoresTable').DataTable({
    			dom: 'Bfrtip',
				"ajax": {
					"url": '/admin/crud/valoresindicadores/visualize/data/getdata',
					"type": 'GET',
					"data": function ( d ) {
						return serializeFormData();
					}
				},
				"order": [[ 4, "desc" ]],
				"pageLength": 50,
				"language": {
				    "sLengthMenu":     "Mostrar _MENU_ registros",
				    "sZeroRecords":    "No se encontraron resultados",
				    "sEmptyTable":     "Ningún dato disponible en esta tabla",
				    "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
				    "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
				    "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
				    "sSearch":         "Buscar:",
				    "oPaginate": {
				        "sFirst":    "Primero",
				        "sLast":     "Último",
				        "sNext":     "Siguiente",
				        "sPrevious": "Anterior"
				    },
				    "oAria": {
				        "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
				        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
				    },
			    },
			    "columnDefs": [
			   		{
		            	"targets":[0],
		            	"width": "25%",
		            },
		            {
		            	"targets":[1],
		            	"width": "25%",
		            },
		            {
		            	"targets":[2],
		            	"width": "20%",
		            },
		    		{
		            	"targets":[3],
		            	"className": "dt-right",
		            	"width": "20%",
		            },
		            {
		            	"targets":[4],
		            	"className": "dt-right",
		            	"width": "10%",
		            },
		        ],
		        buttons: [
		        	{
		                extend: 'colvis',
		                text: "Columnas Visibles"
		            },
		        	'hideNoValue',	
					{
		                extend:'csv',
		                className:'btn-info',
		                exportOptions: {
		                    //columns: [0,1]
		                },
		                text: "CSV",
		                title: "Plataforma ODS - Valores indicadores",
		            },            

					{
		                    extend:'excel',
		                    className:'btn-success',
		                    exportOptions: {
		                        //columns: [0,1]
		                    },
		                    message: "MENSAJE",
		                    text: "EXCEL",
		                    title: "Plataforma ODS - Valores indicadores"
		            },            
					{
		                    extend:'pdfHtml5',
		                    className:'btn-danger',
		                    exportOptions: {
		                        columns: ':visible'
		                    },
		                    text: "PDF",
		                    title: "Plataforma ODS - Valores indicadores",
		                    customize: function ( doc ) {
		                    	doc.content.splice(1, 0, 
		                    		{
								        text: getHeadingExportMessage(),
								        alignment: 'left'
								    }
                				)
		            		}
		            }            

		            
		            
		          
		        ]
    		});
    	}

    	function getHeadingExportMessage(){
        	return  "Objetivo: " +  $('#three_select_objetivo option:selected').attr('title') + "\n\n" + 
					"Meta: " +  $('#three_select_meta option:selected').attr('title') + "\n\n" + 
					"Indicador: " + $('#three_select_indicador option:selected').attr('title') + "\n\n" + 
					"Período: " + $('#dateValuePicker').val() +  "\n\n";
    	}


    	function initFilters(){
		    table.columns().every( function () {
		        var that = this;
		        $( 'input', this.footer() ).on( 'keyup change', function () {
		            if ( that.search() !== this.value ) {
		                that.search( this.value ).draw();
		            }
		        } );
		    } );
    	}


    	function updateIndicadorDatesValues(data){
    		var newDatesHTML = "";
    		for (i in data){
    			var ref = "<a class='btn btn-default loadIndicadorDate'>"+data[i]+"</a>  ";
    			newDatesHTML += ref;
    		}
    		$('#indicadorDatesWithData').html(newDatesHTML);
    		// Por defecto, pido datos del ultimo año disponible
    		if (preselected_date && data.indexOf(preselected_date.toString()) != -1){
    			$('#dateValuePicker').val(data[data.indexOf(preselected_date.toString())]);
				fetchvisualizeData();
				preselected_date = null;
    		} else {
	    		if (data.length){
	    			$('#dateValuePicker').val(data[data.length-1]);
	    			fetchvisualizeData();
	    		} else {
	    			$('#dateValuePicker').val("");
	    		}
	    	}
    	}


    	function getIndicadorDates(){
    		var idIndicador = $('#three_select_indicador').val();
    		var url = api_urls.indicador_dates + '?id_indicador='+ idIndicador;
    		if (idIndicador != null && idIndicador != -1){
	    		data = {'id':idIndicador};
	    		$('#indicadorDatesWithData').html('<i class="fa fa-spinner fa-spin fa-fw"></i>');
	    		$.ajax(url,{
	                  'data': JSON.stringify(data),
	                  'type': 'GET',
	                  'processData': false,
	                  'contentType': 'application/json',
	                   success: function(data) {
		                    updateIndicadorDatesValues(data);
	                   },
	                   error: function(data) {
	                    console.log("ERROR");
	                  },
	              });
	    	} else {
	    		updateIndicadorDatesValues([]);
	    		table.clear().draw();
	    	}
    	}


		function init(){
		  initViewControls();
		  $('#dateValuePicker').datepicker({
		            format: "yyyy",
		            minViewMode: 2,
		            daysOfWeekDisabled: "1,2,3,4,5,6",
		            autoclose: true
		    });
		  initTable();
		  initFilters();
		  getIndicadorDates();
		}


		function resetRequestState(data){
			$btn.button('reset');
			initFilters();
		}


    	function getMetaValFromCode(code){
    		option = $('#three_select_meta option').filter(function() { 
    			return $(this).text().indexOf(code) === 0; 
    		});
    		return $(option[0]).val();
    	}


		function metaChange(){
            if (model.get('meta_selected') != -1){
                metaText = $('#three_select_meta option[value='+model.get('meta_selected')+']').text();
                objetivoMeta = metaText.split('-')[0].split('.')[0];
                model.set('objetivo_selected', objetivoMeta,  { silent: true });
                $('#three_select_objetivo option[value='+objetivoMeta+']').attr('selected','selected');
            }
		}

		function indicadorChange(){
            if (model.get('indicador_selected') != null && model.get('indicador_selected') != -1){
                indicadorText = $('#three_select_indicador option:selected').text();
                indicadorCode = indicadorText.split('-')[0].split('.');
            	model.set('objetivo_selected', indicadorCode[0], { silent: true });
				metaVal = getMetaValFromCode(indicadorCode[0]+'.'+indicadorCode[1]);
                model.set('meta_selected', metaVal, { silent: true });
            }
            view.render();
			getIndicadorDates();
		}






        // Inicio Threeselect y datepicker
        function initViewControls(){
	    	model = new ThreeSelectData({
	    		'objetivos': objetivos,
	    		'metas': metas,
	    		'indicadores': indicadores,
	    		'add_global_option': true,
	    		'objetivo_selected':objetivo_selected,
	    		'meta_selected':meta_selected,
	    		'indicador_selected': indicador_selected,
	    	});
	    	view = new ThreeSelectView({el: $("#selects") ,model:model,
                metaChangeCallback: metaChange, indicadorChangeCallback: indicadorChange});
    	}


		function fetchvisualizeData(){
			$btn = $('#requestVisualizeData');
			$btn.button('loading');
			table.ajax.reload(resetRequestState);
		}

		$('#requestVisualizeData').on('click', function(){
			fetchvisualizeData();
		})

		$('#alertsDates').on('click', '.loadIndicadorDate', function() {
			$('#dateValuePicker').val($(this).text());
			fetchvisualizeData();
		});



        init();


        // Cambiar estado boton request
        // Agregar botones y filtro a tabla
        // EXPORTAR!

	})

</script>

{% endblock %}